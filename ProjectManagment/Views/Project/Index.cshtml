@model IEnumerable<ProjectModel>

@{
    ViewData["Title"] = "Projects";
}

<h1>Projects</h1>

<p>
    <a asp-action="Create" class="btn btn-primary">Create New Project</a>
</p>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().Description)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-secondary">Edit</a>
                    <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-info">Details</a>
                    <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-danger">Delete</a>
                    <button class="btn btn-primary invite-user-btn" data-project-id="@item.Id" data-project-name="@item.Name">Invite User</button>

                </td>
            </tr>
        }
    </tbody>
</table>
@* Render InviteUser ViewComponent *@
<div id="inviteUserComponent">
    @await Component.InvokeAsync("InviteUser", new { projectId = 0, projectName = "" })
</div>
@section Scripts {
    <script src="~/js/ProjectIndex.js"></script>
}